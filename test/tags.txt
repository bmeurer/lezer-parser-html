# Self-closing tag

<foo/>

==> element.expression(selfClosing.tag(tag.open, tag.type.name, tag.close))

# Regular tag

<foo>bar</foo>

==> element.expression(opening.tag(tag.open, tag.type.name, tag.close), text.e, closing.tag(tag.open, tag.type.name, tag.close))

# Nested tag

<a><b>c</b><d/></a>

==>

element.e(opening.t(tag.t),
  element.e(opening.t(tag.t), text.e, closing.t(tag.t)),
  element.e(selfClosing.t(tag.t)),
closing.t(tag.t))

# Attribute

<a foo="bar"/>

==> element.e(selfClosing.t(tag.t, attribute.definition.property.name, equals.punctuation, attribute.string.literal))

# Multiple attributes

<a x="one" y="two" z="three"></a>

==> element.e(opening.t(tag.t, attribute.d, attribute.s, attribute.d, attribute.s, attribute.d, attribute.s), closing.t(tag.t))

# Value-less attributes

<a x y="one" z></a>

==> element.e(opening.t(tag.t, attribute.d, attribute.d, attribute.s, attribute.d), closing.t(tag.t))

# Unquoted attributes

<a x=one y z=two></a>

==> element.e(opening.t(tag.t, attribute.d, attribute.s, attribute.d, attribute.d, attribute.s), closing.t(tag.t))

# Entities

<a attr="one&amp;two">&amp;&#67;</a>

==>

element.e(opening.t(tag.t, attribute.d, attribute.s(entity.reference)), entity.reference, character.reference, closing.t(tag.t))

# Doctype

<!doctype html>
<doc/>

==>

doctype.declaration.metadata,
text.e,
element.e(selfClosing.t(tag.t))

# Processing instructions

<?foo?><bar><?baz?></bar>

==>

processing.instruction.metadata,
element.e(opening.t(tag.t), processing.instruction.metadata, closing.t(tag.t))

# Comments

<!-- top comment -->
<element><!-- inner comment --> text</element>

==>

block.comment,
text.e,
element.e(opening.t(tag.t), block.comment, text.e, closing.t(tag.t))

# Mismatched tag

<a></b>

==> element.e(opening.t(tag.t), closing.t(tag.mismatch))

# Unclosed tag

<a>

==> element.e(opening.t(tag.t))

# Nested mismatched tag

<a><b><c></c></x></a>

==>

element.e(opening.t(tag.t),
  element.e(opening.t(tag.t),
    element.e(opening.t(tag.t), closing.t(tag.t)),
    closing.t(tag.mismatch)),
  closing.t(tag.t))

# Mismatched tag with whitespace

<doc>
  <
    foo bar="10">
    blah
  </oof>
</doc>

==>

element.e(opening.t(tag.t),
  text.e,
  element.e(opening.t(tag.t, attribute.d, attribute.s),
    text.e
    closing.t(tag.mismatch))
  text.e,
  closing.tag(tag.t))

# Self-closing tags

<a><img src=blah></a>

==> element.e(opening.t(tag.t), element.e(selfClosing.t(tag.t, attribute.d, attribute.s)), closing.t(tag.t))

# Implicitly closed

<dl><dd>Hello</dl>

==> element.e(opening.t(tag.t), element.e(opening.t(tag.t), text.e), closing.t(tag.t))

# Closed by sibling

<div>
  <p>Foo
  <p>Bar
</div>

==>

element.e(opening.t(tag.t),
  text.e,
  element.e(opening.t(tag.t), text.e),
  element.e(opening.t(tag.t), text.e),
  closing.t(tag.t))

# Closed by sibling at top

<p>Foo
<p>Bar

==>

element.e(opening.t(tag.t), text.e),
element.e(opening.t(tag.t), text.e)

# Textarea

<p>Enter something: <textarea code-lang=javascript>function foo() {
  return "</bar>"
}</textarea>

==> element.e(opening.t(tag.t), text.e, element.e(opening.t(tag.t, attribute.d, attribute.s), raw.text.e, closing.t(tag.t)))

# Script

<script>This is not an entity: &lt;</script>

==> element.e(opening.t(tag.t), raw.text.e, closing.t(tag.t))
